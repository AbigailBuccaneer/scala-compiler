plugins {
    id 'application'
    id 'com.jfrog.artifactory' version '4.4.13'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'ivy-publish'
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.ivy', name: 'ivy', version: '2.4.0'
}

group 'io.github.abigailbuccaneer'
version '0.3.2'
sourceCompatibility = 1.7
targetCompatibility = 1.7
applicationName = 'scalac'
mainClassName = project.group + '.ScalaCompiler'

task createRunnerStartScripts(type: CreateStartScripts) {
    applicationName = 'scala'
    mainClassName = project.group + '.ScalaRunner'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
}

startScripts.dependsOn(createRunnerStartScripts)

ext.url = 'https://github.com/AbigailBuccaneer/scala-compiler'
description = 'An Apache Ivyâ„¢-powered wrapper around the Scala compiler'

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier 'sources'
}

task javadocs(type: Javadoc) {
    source = sourceJar.source
}

task javadocJar(type: Jar) {
    from javadocs.destinationDir
    classifier 'javadoc'
}

ext.bintrayInfoFile = new File(buildDir, 'bintray-info.json')

task createBintrayInfoFile(type: Copy) {
    from rootDir
    into bintrayInfoFile.parentFile
    include bintrayInfoFile.name
    expand([
            name   : project.name,
            version: project.version
    ])
}

publishing {
    repositories {
        ivy {
            url "${System.getenv('HOME')}/.ivy2/local"
            layout 'ivy'
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            artifact(bintrayInfoFile) {
                builtBy(createBintrayInfoFile)
                extension bintrayInfoFile.name
            }
            pom.withXml {
                def root = asNode()
                root.appendNode('name', '${project.groupId}:${project.artifactId}')
                root.appendNode('description', project.description)
                root.appendNode('url', url)
                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'MIT License')
                license.appendNode('url', 'http://www.opensource.org/licenses/mit-license.php')
                def developer = root.appendNode('developers').appendNode('developer')
                developer.appendNode('name', 'Abigail Bunyan')
                developer.appendNode('email', 'AbigailBuccaneer@users.noreply.github.com')
                developer.appendNode('organization', 'N/A')
                developer.appendNode('organizationUrl', 'https://github.com/AbigailBuccaneer')
                def scm = root.appendNode('scm')
                scm.appendNode('connection', 'scm:git:https://github.com/AbigailBuccaneer/scala-compiler.git')
                scm.appendNode('developerConnection', 'scm:git:ssh://git@github.com:AbigailBuccaneer/scala-compiler.git')
                scm.appendNode('url', url)
            }
        }

        ivyJava(IvyPublication) {
            from components.java
        }
    }
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            if (project.version.endsWith('-SNAPSHOT')) {
                repoKey = 'oss-snapshot-local'
            } else {
                repoKey = 'oss-release-local'
            }
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
    }
}

bintray {
    user = "$bintray_user"
    key = "$bintray_key"
    pkg {
        repo = 'maven'
        name = project.name
        publications = ['mavenJava']
        version {
            name = project.version
        }
    }
}
